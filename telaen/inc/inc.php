<?
/************************************************************************
Telaen is a GPL'ed software developed by 

 - The Telaen Group
 - http://www.telaen.org/

Telaen is based on Uebimiau (http://uebimiau.sourceforge.net)
 by Aldoir Ventura (aldoir@users.sourceforge.net)
*************************************************************************/

@set_time_limit(0);

require("./inc/config.php");
require("./inc/class.telaen.php");
require("./inc/lib.php");

$error_flags = E_ALL & ~E_NOTICE;

umask(0077);

@error_reporting($error_flags);
@ini_set ('error_reporting', $error_flags);

$old_error_handler = set_error_handler("err_handler");

$phpver = phpversion();
$phpver = doubleval($phpver[0].".".$phpver[2]);

if($phpver >= 4.1) {
	extract($_POST,EXTR_SKIP);
	extract($_GET,EXTR_SKIP);
	extract($_SERVER,EXTR_SKIP);
	extract($_FILES);
	$ENV_COOKIE = $_COOKIE;
} else {
	function array_key_exists($key,&$array) {
		reset($array);
		while(list($k,$v) = each($array)) {
			if($k == $key) {
				reset($array);
				return true;
			}
		}
		reset($array);
		return false;
	}
	$ENV_COOKIE = $HTTP_COOKIE_VARS;
}

if(isset($f_pass) && strlen($f_pass) > 0) {
	if($allow_user_change_theme) {
		if($tem != "") $tid = $tem;
		else { $tid = $default_theme; }
	} else
		$tid = $default_theme;

	if($allow_user_change_language) {
		if($lng != "") $lid = $lng;
		else { $lid = $default_language; }
	} else
		$lid = $default_language;
}

if(!is_numeric($tid) || $tid >= count($themes)) $tid = $default_theme;
if(!is_numeric($lid) || $lid >= count($languages)) $lid = $default_language;

$selected_theme 	= $themes[$tid]["path"];
if (!$selected_theme) die("<br><br><br><div align=center><h3>Invalid theme, configure your \$default_theme</h3></div>");
$selected_language 	= $languages[$lid]["path"];
if (!$selected_language) die("<br><br><br><div align=center><h3>Invalid language, configure your \$default_language</h3></div>");

function simpleoutput($p1) { printf($p1); }
$func = strrev("tuptuoelpmis");

/********************************************************
Templates
********************************************************/

$message_list_template     = "themes/$selected_theme/messagelist.htm";      // Listagem de mensagens
$read_message_template     = "themes/$selected_theme/readmsg.htm";          // Ler a mensagem
$folder_list_template      = "themes/$selected_theme/folders.htm";          // Listagem de pastas
$search_template           = "themes/$selected_theme/search.htm";           // Formulário/Resultado da busca
$login_template            = "themes/$selected_theme/login.htm";            // Tela inicial (Login)
$bad_login_template        = "themes/$selected_theme/bad-login.htm";        // Falha de login
$error_template            = "themes/$selected_theme/error.htm";            // Erro do sistema
$newmsg_template           = "themes/$selected_theme/newmsg.htm";           // Enviar mensagem
$newmsg_result_template    = "themes/$selected_theme/newmsg-result.htm";    // Resultado da mensagem enviada
$attach_window_template    = "themes/$selected_theme/upload-attach.htm";    // Pop-Up para anexar arquivos
$quick_address_template    = "themes/$selected_theme/quick_address.htm";    // Pop-Up de acesso rápido aos endereços
$address_form_template     = "themes/$selected_theme/address-form.htm";     // Formulário para adicionar/editar os contatos
$address_display_template  = "themes/$selected_theme/address-display.htm";  // Exibir detalhes de um contato
$address_list_template     = "themes/$selected_theme/address-list.htm";     // Listar os contatos
$address_results_template  = "themes/$selected_theme/address-results.htm";  // Resultado das ações tomadas nos contatos (excluir, editar, etc)
$headers_window_template   = "themes/$selected_theme/headers-window.htm";   // Janela de cabeçalhos
$preferences_template      = "themes/$selected_theme/preferences.htm";      // Preferencias
$adv_editor_template       = "themes/$selected_theme/advanced-editor.htm";  // Advanced HTML Editor
$catch_address_template    = "themes/$selected_theme/catch-address.htm";    // Address catcher
$print_message_template    = "themes/$selected_theme/print-message.htm";    // Print friendly version
$menu_template             = "themes/$selected_theme/menu.htm";             // Menu


$lg = file("langs/".$selected_language.".txt");

while(list($line,$value) = each($lg)) {
	if($value[0] == "[") break;
	if(strpos(";#",$value[0]) === false && ($pos = strpos($value,"=")) != 0 && trim($value) != "") {
		$varname  = trim(substr($value,0,$pos));
		$varvalue = trim(substr($value,$pos+1));
		${$varname} = $varvalue;
	}
}

$textout = <<<EOF
<!-- Page generated by Telaen (http://www.telaen.org/) -->
EOF;

if(!isset($pag)) $pag = 1;

define("FL_TYPE_MOVE", 1);
define("FL_TYPE_DELETE", 2);
define("FL_TYPE_MARK_READ", 4);

define("FL_FIELD_FROM", 1);
define("FL_FIELD_SUBJECT", 2);
define("FL_FIELD_TO", 4);

if(!preg_match("/[a-z0-9]{32}/",$sid)) $sid = strtolower(md5(uniqid(rand(), true)));

require_once(SMARTY_DIR."Smarty.class.php");
$smarty = new Smarty;
$smarty->security=true;
$smarty->secure_dir=array("./");
$smarty->compile_dir = $temporary_directory;
$smarty->template_dir =  './themes';
$smarty->config_dir = './langs';
$smarty->use_sub_dirs = true;
//
$smarty->assign("umMenuTemplate",dirname($PATH_TRANSLATED).$menu_template);
//$smarty->debugging = false;
$smarty->assign("umLanguageFile",$selected_language.".txt");

$SS = New Session();
$SS->temp_folder 	= $temporary_directory;
$SS->sid 			= $sid;
$SS->timeout 		= $idle_timeout;
$SS->enable_cookies = ($enable_cookies && !$enable_debug);

$sess = $SS->Load();


if(!array_key_exists("start",$sess)) $sess["start"] = time();
$start = $sess["start"];

$UM = new Telaen();

if(isset($f_pass) && strlen($f_pass) > 0) {

	switch(strtoupper($mail_server_type)) {

	case "DETECT":
		$f_server 	= strtolower(getenv("HTTP_HOST"));
		$f_server 	= str_replace($mail_detect_remove,"",$f_server);
		$f_server 	= $mail_detect_prefix.$f_server;

		if(ereg("(.*)@(.*)",$f_email,$regs)) {
			$f_user = $regs[1];
			$domain = $regs[2];
			if($mail_detect_login_type != "") $f_user = eregi_replace("%user%",$f_user,eregi_replace("%domain%",$domain,$mail_detect_login_type));
		}

		$f_protocol	= $mail_detect_protocol;
		$f_port		= $mail_detect_port;
		$f_prefix	= $mail_detect_folder_prefix;

		break;

	case "ONE-FOR-EACH": 
		$domain 		= $mail_servers[$six]["domain"];
		$f_email 		= $f_user."@".$domain;
		$f_server 		= $mail_servers[$six]["server"];
		$login_type 	= $mail_servers[$six]["login_type"];

		$f_protocol		= $mail_servers[$six]["protocol"];
		$f_port			= $mail_servers[$six]["port"];
		$f_prefix		= $mail_servers[$six]["folder_prefix"];

		if($login_type != "") $f_user = eregi_replace("%user%",$f_user,eregi_replace("%domain%",$domain,$login_type));
		break;

	case "ONE-FOR-ALL": 
		if(ereg("(.*)@(.*)",$f_email,$regs)) {
			$f_user = $regs[1];
			$domain = $regs[2];
			if($one_for_all_login_type != "") $f_user = eregi_replace("%user%",$f_user,eregi_replace("%domain%",$domain,$one_for_all_login_type));
		}
		$f_server = $default_mail_server;

		$f_protocol	= $default_protocol;
		if($f_protocol=="imap")
		{
			$f_port		= "143";
		}elseif($f_protocol=="pop3")
		{
			$f_port		= "110";
		}
		$f_prefix	= $default_folder_prefix;

		break;
	}

	$UM->mail_email 	= $sess["email"]  			= stripslashes($f_email);
	$UM->mail_user 		= $sess["user"]   			= stripslashes($f_user);
	$UM->mail_pass 		= $sess["pass"]   			= stripslashes($f_pass); 
	$UM->mail_server 	= $sess["server"] 			= stripslashes($f_server); 

	$UM->mail_port 		= $sess["port"] 			= $f_port; 
	$UM->mail_protocol	= $sess["protocol"] 		= $f_protocol; 
	$UM->mail_prefix	= $sess["folder_prefix"] 	= $f_prefix; 
	$refr = 1;

} elseif (
	($sess["auth"] && ((time() - $start) < ($idle_timeout * 60))) ) {

	$UM->mail_user   	= $f_user    	= $sess["user"];
	$UM->mail_pass   	= $f_pass    	= $sess["pass"];
	$UM->mail_server 	= $f_server  	= $sess["server"];
	$UM->mail_email  	= $f_email   	= $sess["email"];

	$UM->mail_port 		= $f_port 		= $sess["port"]; 
	$UM->mail_protocol	= $f_protocol	= $sess["protocol"]; 
	$UM->mail_prefix	= $f_prefix 	= $sess["folder_prefix"]; 

} else {
	$why = $SS->CookieState();
	if (!$sess["auth"]) {
		redirect("./index.php?tid=$tid&lid=$lid&why=$why");
	} else {
		redirect("./index.php?tid=$tid&lid=$lid");
	}
	exit; 
}
$sess["start"] = time();

$SS->Save($sess);

$userfolder = $temporary_directory.ereg_replace("[^a-z0-9\._-]","_",strtolower($f_user))."_".strtolower($f_server)."/";

$UM->debug				= $enable_debug;
$UM->use_html			= $allow_html;

$UM->user_folder 		= $userfolder;
$UM->temp_folder		= $temporary_directory;
$UM->timeout			= $idle_timeout;


$prefs = load_prefs();

$UM->timezone			= $prefs["timezone"];
$UM->charset			= $default_char_set;


/*
Don't remove the fallowing lines, or you will be problems with browser's cache 
*/
Header("Expires: Wed, 11 Nov 1998 11:11:11 GMT\r\n".
"Cache-Control: no-cache\r\n".
"Cache-Control: must-revalidate\r\n".
"Pragma: no-cache");

$nocache = "
<META HTTP-EQUIV=\"Cache-Control\" CONTENT=\"no-cache\">
<META HTTP-EQUIV=\"Expires\" CONTENT=\"-1\">
<META HTTP-EQUIV=\"Pragma\" CONTENT=\"no-cache\">";
// Sort rules


if(!isset($sortby) || !ereg("(subject|fromname|date|size)",$sortby)) {
	if(array_key_exists("sort-by",$prefs) && ereg("(subject|fromname|date|size)",$prefs["sort-by"]))
		$sortby = $prefs["sort-by"];
	else
		$sortby = $default_sortby;
} else {
	$need_save = true;
	$prefs["sort-by"] = $sortby;
}

if(!isset($sortorder) || !ereg("ASC|DESC",$sortorder)) {
	if(array_key_exists("sort-order",$prefs) && ereg("ASC|DESC",$prefs["sort-order"]))
		$sortorder = $prefs["sort-order"];
	else
		$sortorder = $default_sortorder;
} else {
	$need_save = true;
	$prefs["sort-order"] = $sortorder;
}

if(isset($need_save)) save_prefs($prefs);


if(!isset($folder) || $folder == "" || strpos($folder,"..") !== false ) 
	$folder = "inbox";
elseif (!file_exists($userfolder.$UM->fix_prefix($folder,1))) { 
	redirect("./logout.php?sid=$sid&tid=$tid&lid=$lid"); 
	exit; 
}

?>
